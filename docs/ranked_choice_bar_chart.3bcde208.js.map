{"version":3,"sources":["d3-nyc-primary/js/ranked_choice_bar_chart.js"],"names":["tickDuration","animationDuration","top_n","height","width","svg","d3","select","append","attr","margin","top","right","bottom","left","barPadding","title","html","subTitle","round","link","csv","then","data","console","log","forEach","d","value","isNaN","colour","roundSlice","filter","sort","a","b","slice","i","rank","x","scaleLinear","domain","max","range","y","xAxis","axisTop","scale","ticks","tickSize","tickFormat","format","call","selectAll","classed","name","enter","style","string","replace","roundText","halo","ticker","interval","e","transition","duration","ease","easeLinear","bars","exit","remove","labels","valueLabels","stop","text","strokeWidth","parentNode","insertBefore","cloneNode"],"mappings":"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","file":"ranked_choice_bar_chart.3bcde208.js","sourceRoot":"..\\content","sourcesContent":["//Bar chart created by Sharon Lurye\r\n//Thank you to Gurman Bhatia, Jonathan Soma, and Suhail Bhat-ta for their help\r\n//Based on block by Joel Zief: https://bl.ocks.org/jrzief/70f1f8a5d066a286da3a1e699823470f\r\n//Which in turn is probably based on this code by Mike Bostock: https://observablehq.com/@d3/bar-chart-race \r\n\r\n// Other tweaks I'd like to make in future edits:    \r\n    // -- Add button for replay, pause, or select round\r\n    // -- Figure out a way to create a rank automatically using D3 (rather than manually in Excel)\r\n    // -- Make the outerLabel/innerLabel code less complicated \r\n    // -- Replace scaleLinear with scaleBand\r\n\r\n\r\n//Start by defining variables\r\n//Tick duration = amount of time before it transitions to next round\r\n//Animation duration = amount of time the animation takes\r\n//Since animation duration is less than tick duration, there is a pause between rounds    \r\n\r\nvar tickDuration = 2000;\r\nvar animationDuration = 500 \r\nvar top_n = 15;\r\nvar height = 600;\r\nvar width = 960;\r\n\r\n//Create SVG\r\n\r\nvar svg = d3.select(\"body\").append(\"svg\")\r\n      .attr(\"width\", width) \r\n      .attr(\"height\", height);\r\n  \r\n    \r\n    const margin = {\r\n      top: 80,\r\n      right: 100, //Added right margin so that top candidate's name does not get cut off\r\n      bottom: 5,\r\n      left: 0\r\n    };\r\n  \r\n    let barPadding = (height-(margin.bottom+margin.top))/(top_n*5);\r\n      \r\n    let title = svg.append('text')\r\n     .attr('class', 'title')\r\n     .attr('y', 24)\r\n     .html('New York City 2021 Ranked Choice Mayoral Primary Results');\r\n  \r\n    let subTitle = svg.append(\"text\")\r\n     .attr(\"class\", \"subTitle\")\r\n     .attr(\"y\", 55)\r\n     .html(\"Unofficial vote count for the Democratic primary as of July 6, 2021\");\r\n   \r\n     let round = 1;\r\n  \r\n//To run in a local server, type into terminal: python -m http.server 1111 (or any four numbers)\r\n//Then visit http://localhost:1111/\r\n\r\nconst link = \"./boe_primary_results.csv\"\r\n\r\n  d3.csv(link).then(function(data) {\r\n    //if (error) throw error;\r\n      \r\n    console.log(data);\r\n      \r\n      \r\n       data.forEach(d => {\r\n        d.value = isNaN(d.value) ? 0 : +d.value, //If it is null, value is 0\r\n        d.round = +d.round,\r\n        d.colour = \"cornflowerblue\"        \r\n//        d.colour = d3.hsl(Math.random()*360,0.75,0.75) // Make it random colors\r\n      });\r\n\r\n     console.log(data);\r\n    \r\n     //filter for current round\r\n     let roundSlice = data.filter(d => d.round == round && !isNaN(d.value))\r\n      .sort((a,b) => b.value - a.value) // biggest value on top \r\n      .slice(0, top_n);\r\n   \r\n      roundSlice.forEach((d,i) => d.rank = i);\r\n    \r\n     console.log('roundSlice: ', roundSlice)\r\n  \r\n     //make x scale\r\n     //this probably should have been scaleBand\r\n     let x = d3.scaleLinear()\r\n        .domain([0, d3.max(roundSlice, d => d.value)]) \r\n        //If we wanted the axis fixed: \r\n        //.domain([0, 450000])\r\n        .range([margin.left, width-margin.right-65]);\r\n  \r\n     let y = d3.scaleLinear()\r\n        .domain([top_n, 0])\r\n        .range([height-margin.bottom, margin.top]);\r\n  \r\n     let xAxis = d3.axisTop()\r\n        .scale(x)\r\n        .ticks(width > 500 ? 5:2)\r\n        .tickSize(-(height-margin.top-margin.bottom))\r\n        .tickFormat(d => d3.format(',')(d));\r\n  \r\n     svg.append('g')\r\n       .attr('class', 'axis xAxis')\r\n       .attr('transform', `translate(0, ${margin.top})`)\r\n       .call(xAxis)\r\n       .selectAll('.tick line')\r\n       .classed('origin', d => d == 0);\r\n  \r\n       svg.selectAll('rect.bar')\r\n       .data(roundSlice, d => d.name)\r\n       .enter()\r\n       .append('rect')\r\n       .attr('class', 'bar')\r\n       .attr('x', x(0)+1)\r\n       .attr('width', d => x(d.value)-x(0)) //was originally x(d.value-x(0)-1) in Zief's code\r\n       .attr('y', d => y(d.rank)+5)\r\n       .attr('height', y(1)-y(0)-barPadding)\r\n//       .style('fill', d => d.colour);\r\n       .style('fill', function(d) { \r\n         if (d.name === \"Inactive ballots\") {\r\n           return \"gray\"\r\n          } else {\r\n            return d.colour\r\n          }})  \r\n\r\n\r\n     svg.selectAll('text.innerLabel') //originally text.label\r\n        .data(roundSlice, d => d.name)\r\n        .enter()\r\n        .append('text')\r\n        .attr('class', 'innerLabel')\r\n        .attr('x', d => x(d.value)-8)\r\n        .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1) \r\n        .style('text-anchor', 'end')\r\n        // .html(d => d.name);\r\n        // .html(d => (d.value<100000)?'':d.name);\r\n        .html((d)=>{ // Should only see this if there are more than 100,000 votes\r\n          if (d.value<100000){\r\n            return ''\r\n          } else {\r\n            return d.name\r\n          }\r\n        })\r\n\r\n\r\n    svg.selectAll('text.outerLabel') //originally text.valueLabel\r\n      .data(roundSlice, d => d.name)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'outerLabel')\r\n      .attr('x', d => x(d.value)+5)\r\n      .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1)\r\n      .html((d) => {\r\n        let string\r\n        if (d.value<100000){\r\n          string = '<tspan>'+d.name +'</tspan> (' +d3.format(',')(d.value)+' votes)'\r\n        } else {\r\n          string = '('+d3.format(',')(d.value)+' votes)'  \r\n        }\r\n        \r\n        string = string.replace(\"Inactive ballots\", \"0 voters had all their choices eliminated\")\r\n        string = string.replace('(0 votes)','') // Won't say \"0 votes\" after Inactive Ballots\r\n        return string\r\n      })\r\n      .style('font-style', function(d) { \r\n        if (d.name === \"Inactive ballots\") {\r\n          return \"italic\"\r\n         } else {\r\n           return \"normal\"\r\n         }})\r\n\r\n\r\n    let roundText = svg.append('text')\r\n      .attr('class', 'roundText')\r\n      .attr('x', width) // previously width-margin.right\r\n      .attr('y', height-40) // previously height-25\r\n      .style('text-anchor', 'end')\r\n      .html(\"Round \" + ~~round) // Display \"Round\" plus the round number\r\n     .call(halo, 10);\r\n\r\n     let caption = svg.append('text')\r\n     .attr('class', 'caption')\r\n     .attr('x', width)\r\n     .attr('y', height-5)\r\n     .style('text-anchor', 'end')\r\n     .html('Chart by Sharon Lurye. Source: NYC Board of Elections')\r\n     .call(halo, 10) \r\n\r\n\r\n\r\n \r\n   let ticker = d3.interval(e => {\r\n\r\n      roundSlice = data.filter(d => d.round == round && !isNaN(d.value))\r\n        .sort((a,b) => b.value - a.value)\r\n        .slice(0,top_n);\r\n\r\n      roundSlice.forEach((d,i) => d.rank = i);\r\n     \r\n      console.log('Intervalround: ', round, roundSlice);\r\n\r\n      x.domain([0, d3.max(roundSlice, d => d.value)]); \r\n     //If we wanted the axis fixed:\r\n     // x.domain([0, 450000]); \r\n     \r\n      svg.select('.xAxis')\r\n        .transition()\r\n        .duration(animationDuration)\r\n        .ease(d3.easeLinear)\r\n        .call(xAxis);\r\n    \r\n       let bars = svg.selectAll('.bar').data(roundSlice, d => d.name);\r\n\r\n      //replace code is to create classes by replacing spaces with underscores. \r\n      //However, that still doesn't work as some names have periods.\r\n      //The Slugify code might help: https://gist.github.com/codeguy/6684588  \r\n    \r\n       bars\r\n        .enter()\r\n        .append('rect')\r\n      //  .attr('class', d => `bar ${d.name.replace(/\\s/g,'_')}`)\r\n        .attr('x', x(0)+1)\r\n      //  .attr( 'width', d => x(d.value)-x(0)-1) // (d)=>{console.log(x(d.value)-x(0))}\r\n        .attr('y', d => y(top_n+1)+5)\r\n        .attr('height', y(1)-y(0)-barPadding)\r\n        .style('fill', d => d.colour)\r\n        .transition()\r\n          .duration(animationDuration)\r\n          .ease(d3.easeLinear)\r\n          .attr('y', d => y(d.rank)+5);\r\n          \r\n       bars\r\n        .transition()\r\n          .duration(animationDuration)\r\n          .ease(d3.easeLinear)\r\n          .attr('width', d => x(d.value)-x(0)) //Originally -x(0)-1\r\n          .attr('y', d => y(d.rank)+5);\r\n            \r\n       bars\r\n        .exit()\r\n        .transition()\r\n          .duration(animationDuration)\r\n          .ease(d3.easeLinear)\r\n          .attr('width', d => x(d.value)-x(0)-1)\r\n          .attr('y', d => y(top_n+1)+5)\r\n          .remove();\r\n\r\n       let labels = svg.selectAll('.innerLabel')\r\n          .data(roundSlice, d => d.name);\r\n\r\n       labels\r\n        .enter()\r\n        .append('text')\r\n        .attr('class', 'innerLabel')\r\n        .attr('x', d => x(d.value)-8)\r\n        .attr('y', d => y(top_n+1)+5+((y(1)-y(0))/2))\r\n        .style('text-anchor', 'end')\r\n        .html(d => { //If vote count is less than 100,000 then put the name outside \r\n          if (d.value<100000) {\r\n            return ''\r\n          } else {\r\n            return d.name\r\n          }\r\n        })    \r\n        .transition()\r\n          .duration(animationDuration)\r\n          .ease(d3.easeLinear)\r\n          .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1);\r\n             \r\n    \r\n   \t   labels\r\n          .transition()\r\n          .duration(animationDuration)\r\n            .ease(d3.easeLinear)\r\n            .attr('x', d => x(d.value)-8)\r\n            .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1);\r\n     \r\n       labels\r\n          .exit()\r\n          .transition()\r\n            .duration(animationDuration)\r\n            .ease(d3.easeLinear)\r\n            .attr('x', d => x(d.value)-8)\r\n            .attr('y', d => y(top_n+1)+5)\r\n            .remove();\r\n         \r\n\r\n     \r\n       let valueLabels = svg.selectAll('.outerLabel').data(roundSlice, d => d.name);\r\n    \r\n       valueLabels\r\n          .enter()\r\n          .append('text')\r\n          .attr('class', 'outerLabel')\r\n          .attr('x', d => x(d.value)+5)\r\n          .attr('y', d => y(top_n+1)+5)\r\n          .html((d) => {\r\n            let string\r\n            if (d.value<100000){\r\n              string = '<tspan>'+d.name +'</tspan> (' +d3.format(',')(d.value)+' votes )'\r\n            } else {\r\n              string = '('+d3.format(',')(d.value)+' votes)'\r\n            }\r\n        \r\n            return string\r\n          })\r\n          .transition()\r\n            .duration(animationDuration)\r\n            .ease(d3.easeLinear)\r\n            .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1);\r\n            \r\n       valueLabels\r\n       .html((d) => {\r\n        let string\r\n        if (d.value<100000){\r\n          string = '<tspan>'+d.name +'</tspan> (' +d3.format(',')(d.value)+' votes)'\r\n        } else {\r\n          string = '('+d3.format(',')(d.value)+' votes)'\r\n        }\r\n        if (d.name === 'Inactive ballots') {\r\n          string= d3.format(',')(d.value)+' voters had all their choices eliminated' }\r\n        else {\r\n          string = string.replace('(0 votes)', '(eliminated)')    \r\n//        string=string.replace('(0 votes)','(eliminated after round ' + d.eliminated_after_round + ')')\r\n          }\r\n        return string\r\n      })       \r\n          .transition()\r\n            .duration(animationDuration)\r\n            .ease(d3.easeLinear)\r\n            .attr('x', d => x(d.value)+5)\r\n            .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1)\r\n     \r\n      valueLabels\r\n        .exit()\r\n        .transition()\r\n          .duration(animationDuration)\r\n          .ease(d3.easeLinear)\r\n          .attr('x', d => x(d.value)+5)\r\n          .attr('y', d => y(top_n+1)+5)\r\n          .remove();\r\n    \r\n      roundText.html(\"Round \" + ~~round);\r\n     \r\n     if(round == 8) ticker.stop();\r\n     round = round + 1; // originally round + 0.1 \r\n   },tickDuration);\r\n\r\n });\r\n\r\n    const halo = function(text, strokeWidth) {\r\n      text.select(function() { return this.parentNode.insertBefore(this.cloneNode(true), this); })\r\n        .style('fill', '#ffffff')\r\n         .style( 'stroke','#ffffff')\r\n         .style('stroke-width', strokeWidth)\r\n         .style('stroke-linejoin', 'round')\r\n         .style('opacity', 1);\r\n       }   "]}